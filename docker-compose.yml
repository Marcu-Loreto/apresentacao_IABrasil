# docker-compose.yml
version: '3.8'

services:
  # Redis para estado compartilhado
  redis:
    image: redis:7-alpine
    container_name: atendimento_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # FastAPI
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: atendimento_api
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_KEY=${API_KEY:-sua-chave-secreta}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET:-webhook-secret}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./api.py:/app/api.py
      - ./shared_state.py:/app/shared_state.py
      - ./shared_state.json:/app/shared_state.json
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Streamlit
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: atendimento_streamlit
    ports:
      - "8502:8502"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
    volumes:
      - ./app.py:/app/app.py
      - ./shared_state.py:/app/shared_state.py
      - ./shared_state.json:/app/shared_state.json
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: atendimento_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Para certificados SSL
    depends_on:
      - fastapi
      - streamlit
    restart: unless-stopped

volumes:
  redis_data: